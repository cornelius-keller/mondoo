name: release
on:
  push:
    tags:
    - 'v*'
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
      GOOS: linux
      GOARCH: amd64
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: verify dependencies
        run: go mod verify
      - name: test
        run: go test ./...
      - name: build
        run:  go build -v -o mondoo-${{ github.ref_name }} ./...
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./mondoo-${{ github.ref_name }}
          asset_name: mondoo-${{ github.ref_name }}
          asset_content_type: application/octet-stream
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: cornelius-keller/mondoo-deploy
          event-type: mondoo-deploy
          client-payload: '{"version": "${{ github.ref_name }}", "url": "${{ steps.upload-release-asset.outputs.browser_download_url }}"}'

